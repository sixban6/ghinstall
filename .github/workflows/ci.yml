name: Release

on:
  push:
    tags: ['v*']

env:
  GO_VERSION: '1.22'

jobs:
  release:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
          - goos: linux
            goarch: arm64
          - goos: darwin
            goarch: amd64
          - goos: darwin
            goarch: arm64
#          - goos: windows
#            goarch: amd64
            
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Tidy Go modules
        run: go mod tidy

      - name: Download dependencies
        run: go mod download
          
      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 0
        run: |
          mkdir -p dist
          BINARY_NAME="ghinstall-${{ matrix.goos }}-${{ matrix.goarch }}"
          if [ "${{ matrix.goos }}" = "windows" ]; then
            BINARY_NAME="${BINARY_NAME}.exe"
          fi
          go build -o "dist/${BINARY_NAME}" \
            -ldflags="-s -w -X main.appVersion=${{ github.ref_name }}" \
            ./cmd/ghinstall
          
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ghinstall-${{ matrix.goos }}-${{ matrix.goarch }}
          path: dist/

  create-release:
    runs-on: ubuntu-latest
    needs: [release]
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: release-assets
          
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: release-assets/*/ghinstall-*
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}